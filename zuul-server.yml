server:
  port: 9080 #the default port used for zuul service
#  ssl:
#    key-store-type : PKCS12 # The format used for the keystore 
#    key-store: classpath:keystore/keystore.p12 # The path to the keystore containing the certificate
#    key-store-password: toor_Dreamgenics # The password used to generate the certificate
#    key-alias: tomcat # The alias mapped to the certificate
    
#security:
#  require-ssl: true #Since we are using Spring Security enabled application, let's configure it to accept only HTTPS requests

spring:  
  datasource:
      url:  jdbc:postgresql://192.168.6.121:5432/users
      username: "{cipher}d30700b168278385d7f525291a05b7d1db8307bebb63b90484fcf334f28ce92d"
      password: "{cipher}5ca273623c13e8d176907c698e529d282b61ed2267e96cce65ffc63305a49d70"
      class: com.mysql.jdbc.Driver

zuul:
  # Pass Authorization header downstream
  sensitiveHeaders: Cookie,Set-Cookie
  routes:
    client:
      serviceId: MICROSERVICE-CLIENT
    jpa:
      serviceId: MICROSERVICE-HIBERNATE
    mybatis:
      serviceId: MICROSERVICE-MYBATIS
    web-app:
      serviceId: WEB-APP
    dreampipe-jobs:
      serviceId: DREAMPIPE-JOBS
    dreampipe-job-index:
      serviceId: DREAMPIPE-JOB-INDEX
    dreampipe-tasks:
      serviceId: DREAMPIPE-TASKS
      
hystrix:
    command:
        default:
            execution:
                timeout:
                    enabled: false
                    
ribbon: 
  ReadTimeout: 10000
    
app:
  serviceurl: http://localhost:8080/login/cas
  serviceticketvalidator: https://sso.dreamgenics.com/cas
  serviceauthenticationentrypoint: https://sso.dreamgenics.com/cas/login
  
# Spring properties
spring:
  application:
    name: zuul
      

